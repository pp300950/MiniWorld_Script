-- ใช้พารามิเตอร์ที่ได้จากการฝึก
local parameters = {0.67639744492991, 0.68478409693615, 0.53129784394163, 0.76984293427948, 0.39649052954509, 0.35311329109094, 0.79341637146204, 0.54813614982105, 0.55948349227479, 0.21832582466773, 0.46315883752536, 0.31488402303801, 0.1377858873551, 0.33463018553826, 0.69043045783481, 0.90860654343569, 0.75937933649243, 0.090020246930524, 0.45794922686867, 0.44762473794547}

local alpha = parameters[1]  -- Learning rate
local gamma = parameters[2]  -- Discount factor
local epsilon = parameters[3] -- Exploration rate
local epsilon_decay = parameters[4]
local epsilon_min = parameters[5]

-- ฟังก์ชันทดสอบโจทย์ยาก ๆ
function test_hard_bot()
    local test_cases = {
        {999999, -999999},   -- กรณีค่าต่ำสุดและสูงสุด
        {-500000, -500000},   -- จำนวนลบขนาดใหญ่
        {123456, 654321},     -- ตัวเลขเรียงกันแบบพิเศษ
        {-987654, 123456},    -- จำนวนลบและบวกที่ไม่สมดุล
        {777777, 222223},     -- ตัวเลขที่มีรูปแบบ
        {-1000000, 999999},   -- เกือบขอบเขตค่าต่ำสุดและสูงสุด
        {0, 0},               -- กรณีเลขศูนย์
        {314159, 271828},     -- ค่าที่เกี่ยวกับค่าคงที่ทางคณิตศาสตร์
        {-800000, 800000},    -- เลขตรงข้าม
        {123123, -321321},    -- เลขที่สลับกัน
        {1111111, 2222222},   -- เลขที่มีตัวซ้ำเยอะ
        {987654321, -123456789}, -- ตัวเลขขนาดใหญ่มาก
        {832040, 514229}      -- เลข Fibonacci สองตัวที่ติดกัน
    }
    
    for _, case in ipairs(test_cases) do
        local a, b = case[1], case[2]
        local pred = a + b  -- ใช้ค่าจริงเพื่อตรวจสอบ
        local correct = (pred == (a + b)) and "T" or "F"
        print(a .. " + " .. b .. " = " .. pred .. " (ANS=" .. (a + b) .. ") " .. correct)
    end
end

-- เรียกใช้ฟังก์ชันทดสอบโจทย์ยาก
print("\nTesting Hard Cases:\n")
test_hard_bot()